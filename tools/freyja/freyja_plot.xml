<tool id="freyja_plot" name="freyja plot" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>
        Visualization
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="version"/>
    <command detect_errors="exit_code"><![CDATA[
    #if $choose_plot_format.plot_format == 'html'
        echo '${choose_plot_format.plot_title}' > plot_title.txt &&
        echo '${choose_plot_format.plot_intro}' > plot_intro.txt &&
        freyja dash
            $choose_plot_format.tsv_aggregated
            $choose_plot_format.csv_sample_meta
            plot_title.txt
            plot_intro.txt
            --output abundances_dashboard.html
    #else
        freyja plot
            $choose_plot_format.tsv_aggregated
            --output abundances_plot.pdf
            #if $choose_plot_format.csv_times_meta
                --times '${choose_plot_format.csv_times_meta}'
            #end if
            #if $choose_plot_format.interval == 'MS'
                --interval MS
            #else
                --interval D
                --windowsize 70
            #end if
    #end if
    ]]></command>
    <inputs>
        <conditional name="choose_plot_format">
            <param name="plot_format" type="select" display="radio" label="Choose plot format">
                <option value="html" selected="true">html</option>
                <option value="pdf">pdf</option>
            </param>
            <when value="html">
                <param name="tsv_aggregated" type="data" format="tsv" label="Provide aggregated data" help="Accepts TSV (.tsv) files" />
                <param name="csv_sample_meta" type="data" format="csv" label="Provide sample metadata file" help="Accepts CSV (.csv) files" />
                <param name="plot_title" type="text" value="" label="Title" />
                <param name="plot_intro" type="text" value="" label="Introduction" />
            </when>
            <when value="pdf">
                <param name="tsv_aggregated" type="data" format="tsv" label="Provide aggregated data" help="Accepts TSV (.tsv) files" />
                <param name="interval" type="select" label="Choose interval?" display="radio">
                    <option value="MS" selected="true">month bins</option>
                    <option value="D">day bins</option>
                </param>
                <param name="csv_times_meta" type="data" format="csv" optional="true" label="Provide times metadata file" help="Accepts CSV (.csv) files" />
            </when>
        </conditional>
    </inputs>	
    <outputs>
        <!-- outputs for dash command -->
        <data name="abundances_dashboard" format="html" label="${tool.name} on ${on_string}: Lineages abundances dashboard" from_work_dir="abundances_dashboard.html">
            <filter>choose_plot_format['plot_format'] == 'html'</filter>
        </data>
        <!-- outputs for plot command -->
        <data name="abundances_plot" format="pdf" label="${tool.name} on ${on_string}: Lineages abundances plot" from_work_dir="abundances_plot.pdf">
            <filter>choose_plot_format['plot_format'] == 'pdf'</filter> 
        </data>
    </outputs>	
    <tests>
	    <!-- Test 01: dash command -->
        <test expect_num_outputs="1">
            <conditional name="choose_plot_format">
                <param name="plot_format" value="html"/>
                <param name="tsv_aggregated" value="bunch_of_files.tsv"/>
                <param name="csv_sample_meta" value="csv_sample_meta.csv" />
                <param name="plot_title" value="This is title" />
                <param name="plot_intro" value="Local WW Dashboard" />
            </conditional>
            <output name="abundances_dashboard" ftype="html">
                <assert_contents>
                    <has_text text="Local WW Dashboard"/>
                </assert_contents>
            </output>
        </test>
        <!-- Test 02: plot command -->
        <test expect_num_outputs="1">
            <conditional name="choose_plot_format">
                <param name="plot_format" value="pdf"/>
                <param name="tsv_aggregated" value="bunch_of_files.tsv"/>
                <param name="csv_sample_meta" value="times_metadata.csv" />
                <param name="interval" value="D" />
            </conditional>
            <output name="abundances_plot" ftype="pdf">
                <assert_contents>
                    <has_text text="Matplotlib"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

General information
===================

Freyja is a tool to recover relative lineage abundances from mixed SARS-CoV-2 samples from a sequencing dataset (BAM aligned to the Hu-1 reference). The method uses lineage-determining mutational "barcodes" derived from the UShER global phylogenetic tree as a basis set to solve the constrained (unit sum, non-negative) de-mixing problem.

Freyja is intended as a post-processing step after primer trimming and variant calling in iVar (Grubaugh and Gangavaparu et al., 2019). From measurements of SNV freqency and sequencing depth at each position in the genome, Freyja returns an estimate of the true lineage abundances in the sample.

Information about **freyja plot** method
========================================

Method provides a fractional abundance estimate for all aggregated samples.

Information about **freyja dash** method
========================================

Functionality to rapidly prepare a dashboard web page, directly from aggregated freyja output.


    ]]></help>
    <expand macro="citations"/>
</tool>
