<tool id="freyja" name="Freyja" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>
        lineage abundances estimation
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="version"/>
    <command detect_errors="exit_code"><![CDATA[
#if $command_option.choice == 'variants'
    freyja variants 
        $command_option.bam_file
        --variants variants 
        --depths depths.tsv
        --ref '${command_option.ref_file}'
#else if $command_option.choice == 'demix'
    freyja demix
        $command_option.vcf_file
        $command_option.depth_file
        --output abundances.tsv
#else if $command_option.choice == 'boot'
    freyja boot
        $command_option.vcf_file
        $command_option.depth_file
        --nt '${command_option.nt}'
        --nb '${command_option.nb}'
        --output_base boot_output
        $command_option.boxplot_pdf
#else if $command_option.choice == 'aggregate'
    #set demix_dir = 'demix_outputs/'
	mkdir -p demix_outputs &&
        #set file_paths1 = []
        #for $input_file in $command_option.demix_file
            #set $file_path = $demix_dir + $input_file.element_identifier
            ln -s '$input_file' '$file_path' &&
            $file_paths1.append($file_path)
        #end for
    freyja aggregate
        $demix_dir
        --output aggregated.tsv
#else if $command_option.choice == 'plot'
    #if $command_option.choose_plot_format.plot_format == 'html'
        freyja dash
            $command_option.choose_plot_format.tsv_aggregated
            $command_option.choose_plot_format.csv_sample_meta
            $command_option.choose_plot_format.plot_title
            $command_option.choose_plot_format.plot_intro
            --output abundances_dashboard.html
    #else
        freyja plot
            $command_option.choose_plot_format.tsv_aggregated
            --output abundances_plot.pdf
            #if $command_option.choose_plot_format.csv_times_meta
                --times '${command_option.choose_plot_format.csv_times_meta}'
			#end if
            #if $command_option.choose_plot_format.interval == 'MS'
                --interval MS
            #else
                --interval D
				--windowsize 70
            #end if
    #end if
#end if

    ]]></command>
    <inputs>
        <conditional name="command_option">
            <param name="choice" type="select" label="Select your command option">
                <option value="variants" selected="true">Get variant call and sequencing depth information</option>
                <option value="demix">Estimate lineages abundances</option>
				<option value="boot">Bootstrapping method (results 1 - the 0.025, 0.05,0.25,0.5 (median),0.75, 0.95, and 0.975 percentiles for each lineage and 2 - WHO designated VOI/VOC)</option>
				<option value="aggregate">Aggregation method</option>
				<option value="plot">Visualization</option>
            </param>
            <when value="variants">
                <param name="bam_file" type="data" format="bam" multiple="false" label="BAM file(s)" help="After primer trimming and alignment to reference genome. Accepts BAM (.bam) files." />
				<param name="ref_file" argument="--ref" type="data" format="fasta" label="Reference sequence file" help="Note that the reference should match the fasta file used for alignment. Accepts fasta (.fasta, .fa) files." />
            </when>
            <when value="demix">
                <param name="vcf_file" type="data" format="vcf,tsv" multiple="false" label="Variants file(s)" help="Accepts VCF (.vcf), TSV (.tsv) files" />
				<param name="depth_file" type="data" format="tsv" multiple="false" label="Sequencing depth file(s)" help="Accepts .tsv files" />
            </when>
			<when value="boot">
                <param name="vcf_file" type="data" format="vcf,tsv" multiple="false" label="Variants file(s)" help="Accepts VCF (.vcf) files,  TSV (.tsv) files" />
				<param name="depth_file" type="data" format="tsv" multiple="false" label="Sequencing depth file(s)" help="Accepts .tsv files" />
				<param name="nt" argument="--nt" type="integer" optional="true" label="Max number of cpus to use" help="Accepts integer number" />
				<param name="nb" argument="--nb" type="integer" optional="true" label="Number of bootstraps" help="Accepts integer number" />
				<param name="boxplot_pdf" argument="--boxplot pdf" type="boolean" truevalue="--boxplot pdf" falsevalue="" checked="false" label="Generate boxplot" />
            </when>
			
			<when value="aggregate">
				<param name="demix_file" type="data" format="tsv,csv,txt" multiple="true" label="Lineages abundances summary file(s)" help=".tsv files recommended. E.g. one file per one sample." />
            </when>
			<when value="plot">
				<conditional name="choose_plot_format">
					<param name="plot_format" type="select" display="radio" label="Choose plot format" >
					  <option value="html" selected="true">html</option>
					  <option value="pdf">pdf</option>
					</param>					
					<when value="html">
						<param name="tsv_aggregated" type="data" format="tsv" label="Provide aggregated data" help="Accepts TSV (.tsv) files" />
						<param name="csv_sample_meta" type="data" format="csv" label="Provide sample metadata file" help="Accepts CSV (.csv) files" />
						<param name="plot_title" type="data" format="txt" label="Provide txt-file with title" help="Accepts TXT (.txt) files" />
						<param name="plot_intro" type="data" format="txt" label="Provide txt-file with introduction" help="Accepts TXT (.txt) files" />
						<!--<param name="plot_title" type="text" value="" label="Title" />
						<param name="plot_intro" type="text" value="" label="Introduction" />-->
					</when>
					<when value="pdf">
						<param name="tsv_aggregated" type="data" format="tsv" label="Provide aggregated data" help="Accepts TSV (.tsv) files" />
						<param name="interval" type="select" label="Choose interval?" display="radio">
							<option value="MS" selected="true">month bins</option>
							<option value="D">day bins</option>
						</param>
						<param name="csv_times_meta" type="data" format="csv" optional="true" label="Provide times metadata file" help="Accepts CSV (.csv) files" />
					</when>
				</conditional>
            </when>
		</conditional>
    </inputs>
	
    <outputs>
	
		<!-- outputs for variants command -->
		<data name="variants" format="tsv" label="${tool.name} on ${on_string}: Variant call" from_work_dir="variants.tsv">
            <filter>command_option['choice'] == 'variants'</filter>
        </data>
		<data name="depths" format="tsv" label="${tool.name} on ${on_string}: Sequencing depth" from_work_dir="depths.tsv">
            <filter>command_option['choice'] == 'variants'</filter>
        </data>
		
		<!-- outputs for demix command -->
		<data name="abundances" format="tsv" label="${tool.name} on ${on_string}: Lineages abundances summary" from_work_dir="abundances.tsv">
            <filter>command_option['choice'] == 'demix'</filter>
        </data>
		
		<!-- outputs for boot command -->
		<data name="boot_lineages" format="csv" label="${tool.name} on ${on_string}: Bootstrap lineages (0.025, 0.05,0.25,0.5 (median),0.75, 0.95, and 0.975 percentiles for each lineage)" from_work_dir="boot_output_lineages.csv">
            <filter>command_option['choice'] == 'boot'</filter>
        </data>
		<data name="boot_summarized" format="csv" label="${tool.name} on ${on_string}: Bootstrap summarized (WHO designated VOI/VOC)" from_work_dir="boot_output_summarized.csv">
            <filter>command_option['choice'] == 'boot'</filter>
        </data>
		<data name="boot_lineages_plot" format="pdf" label="${tool.name} on ${on_string}: Bootstrap lineages boxplot" from_work_dir="boot_output_lineages.pdf">
            <filter>command_option['choice'] == 'boot' and command_option['boxplot_pdf']</filter>
        </data>
		<data name="boot_summarized_plot" format="pdf" label="${tool.name} on ${on_string}: Bootstrap summarized boxplot" from_work_dir="boot_output_summarized.pdf"> 
            <filter>command_option['choice'] == 'boot' and command_option['boxplot_pdf']</filter> 
        </data>
		
		<!-- outputs for aggregate command -->
		<data name="aggregated" format="tsv" label="${tool.name} on ${on_string}: Aggregated data" from_work_dir="aggregated.tsv">
            <filter>command_option['choice'] == 'aggregate'</filter>
        </data>
		
		<!-- outputs for dash command -->
		<data name="abundances_dashboard" format="html" label="${tool.name} on ${on_string}: Lineages abundances dashboard" from_work_dir="abundances_dashboard.html">
            <filter>command_option['choice'] == 'plot' and command_option['choose_plot_format']['plot_format'] == 'html'</filter>
        </data>
		
		<!-- outputs for plot command -->
		<data name="abundances_plot" format="pdf" label="${tool.name} on ${on_string}: Lineages abundances plot" from_work_dir="abundances_plot.pdf">
            <filter>command_option['choice'] == 'plot' and command_option['choose_plot_format']['plot_format'] == 'pdf'</filter> 
        </data>
    </outputs>
	
    <tests>
	    <!-- Test 01: variants command -->
        <test expect_num_outputs="2">
            <conditional name="command_option">
                <param name="choice" value="variants"/>
                <param name="bam_file" value="test.bam" />
				<param name="ref_file" value="NC_045512_Hu-1.fasta" />
            </conditional>
            <output name="variants" file="variants.tsv" ftype="tsv"/>
            <output name="depths" file="depths.tsv" ftype="tsv" />
        </test>
		<!-- Test 02: demix command -->
        <test expect_num_outputs="1">
            <conditional name="command_option">
                <param name="choice" value="demix"/>
                <param name="vcf_file" value="variants.tsv" />
				<param name="depth_file" value="depths.tsv" />
            </conditional>
            <output name="abundances" ftype="tsv">
                <assert_contents>
                    <has_text text="summarized"/>
                    <has_text text="abundances"/>
                </assert_contents>
            </output>
        </test>
		<!-- Test 03: boot command -->
        <test expect_num_outputs="4">
            <conditional name="command_option">
                <param name="choice" value="boot"/>
                <param name="vcf_file" value="variants.tsv" />
				<param name="depth_file" value="depths.tsv" />
				<param name="nt" value="4" />
				<param name="nb" value="10" />
				<param name="boxplot_pdf" value="true" />
            </conditional>
			<output name="boot_lineages" ftype="csv">
                <assert_contents>
                    <has_text text="B.1.617.2"/>
                </assert_contents>
            </output>
			<output name="boot_summarized" ftype="csv">
                <assert_contents>
                    <has_text text="Delta"/>
                </assert_contents>
            </output>
			<output name="boot_lineages_plot" ftype="pdf">
                <assert_contents>
                    <has_text text="Matplotlib"/>
                </assert_contents>
            </output>
			<output name="boot_summarized_plot" ftype="pdf">
                <assert_contents>
                    <has_text text="Matplotlib"/>
                </assert_contents>
            </output>			 
        </test>
		<!-- Test 04: aggregate command -->
        <test expect_num_outputs="1">
            <conditional name="command_option">
                <param name="choice" value="aggregate"/>
                <param name="demix_file" value="abundances.tsv,abundances2.tsv,abundances3.tsv,abundances4.tsv" />
            </conditional>
            <output name="aggregated" file="aggregated.tsv" ftype="tsv"/>
        </test>
		<!-- Test 05: dash command -->
        <test expect_num_outputs="1">
            <conditional name="command_option">
				<param name="choice" value="plot"/>
					<conditional name="choose_plot_format">
						<param name="plot_format" value="html"/>
						<param name="tsv_aggregated" value="bunch_of_files.tsv"/>
						<param name="csv_sample_meta" value="csv_sample_meta.csv" />
						<param name="plot_title" value="plot_title.txt" />
						<param name="plot_intro" value="plot_intro.txt" />
					</conditional>
			</conditional>
			<output name="abundances_dashboard" ftype="html">
                <assert_contents>
                    <has_text text="Local WW Dashboard"/>
                </assert_contents>
            </output>
        </test>
		<!-- Test 06: plot command -->
        <test expect_num_outputs="1">
           <conditional name="command_option">
				<param name="choice" value="plot"/>
					<conditional name="choose_plot_format">
						<param name="plot_format" value="pdf"/>
						<param name="tsv_aggregated" value="bunch_of_files.tsv"/>
						<param name="csv_sample_meta" value="times_metadata.csv" />
						<param name="interval" value="D" />
					</conditional>
			</conditional>
			<output name="abundances_plot" ftype="pdf">
                <assert_contents>
                    <has_text text="Matplotlib"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

General information
===================

Freyja is a tool to recover relative lineage abundances from mixed SARS-CoV-2 samples from a sequencing dataset (BAM aligned to the Hu-1 reference). The method uses lineage-determining mutational "barcodes" derived from the UShER global phylogenetic tree as a basis set to solve the constrained (unit sum, non-negative) de-mixing problem.

Freyja is intended as a post-processing step after primer trimming and variant calling in iVar (Grubaugh and Gangavaparu et al., 2019). From measurements of SNV freqency and sequencing depth at each position in the genome, Freyja returns an estimate of the true lineage abundances in the sample.

Outputs
=======

An example output should have the format

========== ===================================================
           filename
summarized [('Delta', 0.65), ('Other', 0.25), ('Alpha', 0.1')] 
lineages   ['B.1.617.2' 'B.1.2' 'AY.6' 'Q.3']
abundances "[0.5 0.25 0.15 0.1]"
resid      3.14159
coverage   95.8
========== ===================================================

    ]]></help>
    <expand macro="citations"/>
</tool>
