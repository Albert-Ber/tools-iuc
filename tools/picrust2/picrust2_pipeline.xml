<tool id="picrust2_pipeline" name="PICRUSt2 Full pipeline" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description></description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="bio_tool"/>
    <expand macro="requirements"/>
    <version_command>picrust2_pipeline.py -v</version_command>
    <command detect_errors="exit_code"><![CDATA[
@PLACE_SEQS_PREPROCESSING@
@PREPARE_METAGENOME_PIPELINE_PARAMS@

picrust2_pipeline.py
    ## place_seqs parameters
    @PLACE_SEQS_PARAMS@

    ## hsp parameters
#if $trait_input.selector == "default"
    --in_traits '$trait_input.in_traits'
#else if $trait_input.selector == "custom"
    --custom_trait_tables '$trait_input.custom_trait_tables'
    --marker_gene_table '$trait_input.marker_gene_table'
#end if
    @HSP_METHOD@
    $skip_nsti

    ## metagenome_pipeline parameters
    @METAGENOME_PIPELINE_PARAMS@

    ## pathway_pipeline parameters
    #if $predict_pathways.no_pathways == ''
        @PATHWAY_PIPELINE_PARAMS@
        --reaction_func '$predict_pathways.reaction_map_file.reaction_func'
    #end if

    ## this param applies to place_seqs and pathway_pipeline
    $remove_intermediate
    --output 'full_pipeline_output'
    --processes "\${GALAXY_SLOTS:-1}"
    ]]></command>
    <inputs>
        <!-- place_seqs parameters -->
        <expand macro="place_seqs_params"/>
        <param argument="--remove_intermediate" type="boolean" truevalue="" falsevalue="--remove_intermediate" checked="false" label="Keep intermediate files?" help="If turned off the tool will remove the intermediate outfiles of the sequence placement and pathway inference steps"/>

        <!-- hsp parameters -->
        <conditional name="trait_input">
            <param name="selector" type="select" label="Trait table(s)" help="i.e. which gene families to predict">
                <option value="default" selected="true">Default trait table(s)</option>
                <option value="custom">Customized trait table(s)</option>
            </param>
            <when value="default">
                <param argument="--in_traits" type="select" multiple="true" label="Pre-calculated trait table(s) to use" help="Note that EC numbers will always be predicted unless --no_pathways is set">
                    <option value="COG">COG</option>
                    <option value="EC" selected="true">EC</option>
                    <option value="KO" selected="true">KO</option>
                    <option value="PFAM">PFAM</option>
                    <option value="TIGRFAM">TIGRFAM</option>
                </param>
            </when>
            <when value="custom">
                <!-- both go separately into hsp observed_trait_table -->
                <param argument="--custom_trait_tables" type="data" multiple="true" format="tabular" label="Customized trait table(s)" help="with gene families as columns and genomes as rows"/>
                <!-- by default 16S is used also goes into observed_trait_table -->
                <param argument="--marker_gene_table" type="data" format="tabular" optional="true" label="Table of predicted marker gene (16S or other) copy numbers" />
            </when>
        </conditional>
        <expand macro="hsp_method"/>
        <!-- this corresponds to \-\-calculate_NSTI in hsp -->
        <param argument="--skip_nsti" type="boolean" truevalue="" falsevalue="--skip_nsti" checked="false" label="Calculate nearest-sequenced taxon index (NSTI)?"/>

        <!-- metagenome_pipeline parameters -->
        <expand macro="metagenome_pipeline_params" stratified_arg="--stratified"/>

        <!-- pathway_pipeline parameters -->
        <conditional name="predict_pathways">
            <param argument="--no_pathways" type="select" truevalue="" falsevalue="--no_pathways" checked="true" label="Infer pathways">
                <option value="">Yes</option>
                <option value="--no_pathways">No</option>
            </param>
            <when value="">
                <expand macro="pathway_pipeline_params" mapargument="--pathway_map"/>
                <conditional name="reaction_map_file">
                    <param name="selector" type="select" label="Functional database to use as reactions for inferring pathway abundances">
                        <option value="default" selected="true">Default functional database</option>
                        <option value="custom">Customized reation functional map file</option>
                    </param>
                    <when value="default">
                        <param argument="--reaction_func" type="select" label="Default functional database">
                            <option value="COG">Clusters of Orthologous Genes database (COG)</option>
                            <option value="EC" selected="true">Enzyme Commission number database (EC number)</option>
                            <option value="KO">KEGG Orthology database (KO)</option>
                            <option value="PFAM">Pfam database</option>
                            <option value="TIGRFAM">TIGRFAM database</option>
                        </param>
                    </when>
                    <when value="custom">
                        <param argument="--reaction_func" type="data" format="tabular" label="Custom mapping table" help="An input 2 column map table linking function ids to descriptions for each function"/>
                    </when>
                </conditional>
            </when>
            <when value="--no_pathways"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="out_tree" format="newick" from_work_dir="full_pipeline_output/out.tre" label="${tool.name} on ${on_string}: PICRUSt2 tree of reference and study 16S sequences"/>
        <collection name="full_pipeline_output_files" type="list" label="${tool.name} on ${on_string}: PICRUSt2 predictions based on the database" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)" directory="full_pipeline_output/" format="tabular"/>
        </collection>
        <collection name="EC_metagenome_output_files" type="list" label="${tool.name} on ${on_string}: PICRUSt2 EC metagenome output" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)" directory="full_pipeline_output/EC_metagenome_out/" format="tabular"/>
            <!-- even if EC is always used internally we allow the user to not see these results if EC is unselected -->
            <filter>trait_input['selector'] == "default" and "EC" in trait_input['in_traits']</filter>
        </collection>
        <collection name="KO_metagenome_output_files" type="list" label="${tool.name} on ${on_string}: PICRUSt2 KO metagenome output" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)" directory="full_pipeline_output/KO_metagenome_out/" format="tabular"/>
            <filter>trait_input['selector'] == "default" and "KO" in trait_input['in_traits']</filter>
        </collection>
        <collection name="PFAM_metagenome_output_files" type="list" label="${tool.name} on ${on_string}: PICRUSt2 PFAM metagenome output" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)" directory="full_pipeline_output/PFAM_metagenome_out/" format="tabular"/>
            <filter>trait_input['selector'] == "default" and "PFAM" in trait_input['in_traits']</filter>
        </collection>
        <collection name="TIGRFAM_metagenome_output_files" type="list" label="${tool.name} on ${on_string}: PICRUSt2 TIGRFAM metagenome output" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)" directory="full_pipeline_output/TIGRFAM_metagenome_out/" format="tabular"/>
            <filter>trait_input['selector'] == "default" and "TIGRFAM" in trait_input['in_traits']</filter>
        </collection>
        <collection name="COG_metagenome_output_files" type="list" label="${tool.name} on ${on_string}: PICRUSt2 COG metagenome output" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)" directory="full_pipeline_output/COG_metagenome_out/" format="tabular"/>
            <filter>trait_input['selector'] == "default" and "COG" in trait_input['in_traits']</filter>
        </collection>
        <collection name="intermediate_output_files" type="list" label="${tool.name} on ${on_string}: Intermediate files" >
            <discover_datasets pattern="__name_and_ext__" directory="full_pipeline_output/intermediate/place_seqs"/>
            <discover_datasets pattern="__name_and_ext__" directory="full_pipeline_output/intermediate/pathways"/>
            <filter>remove_intermediate</filter>
        </collection>
    </outputs>
    <tests>
    <test expect_num_outputs="5">
        <param name="study_fasta" value="study_seqs_full.fasta"/>
        <param name="input" value="workflow_seq_abun.biom"/>
        <param name="placement_tool" value="sepp"/>
        <param name="min_align" value="0.0"/>
        <param name="skip_nsti" value="false"/>
        <param name="max_nsti" value="2.0"/>
        <param name="skip_minpath" value="false"/>
        <param name="skip_norm" value="false"/>
        <param name="no_gap_fill" value="true"/>
        <param name="remove_intermediate" value="true"/>
        <conditional name="input_options">
            <param name="selector" value="ASV"/>
            <param name="min_reads" value="1"/>
            <param name="min_samples" value="1"/>
        </conditional>
        <output name="out_tree" ftype="newick">
            <assert_contents>
                <has_text text="643348582"/>
                <has_n_lines n="1"/>
            </assert_contents>
        </output>
        <output_collection name="full_pipeline_output_files" type="list" count="4">
            <element name="EC_predicted.tsv.gz">
                <assert_contents>
                    <has_text text="EC:1.1.1.1"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
            <element name="KO_predicted.tsv.gz">
                <assert_contents>
                    <has_text text="K00001"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
            <element name="marker_predicted.tsv.gz">
                <assert_contents>
                    <has_text text="16S_rRNA_Count"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
        </output_collection>
        <output_collection name="intermediate_output_files" type="list" count="2">
            <element name="query_align.stockholm">
                <assert_contents>
                    <has_text text="STOCKHOLM 1.0"/>
                    <has_n_lines n="160106"/>
                </assert_contents>
            </element>
            <element name="study_seqs_filtered.fasta">
                <assert_contents>
                    <has_text text="02905cfb87861c837dde629596d9272b"/>
                    <has_n_lines n="10"/>
                </assert_contents>
            </element>
        </output_collection>
    </test>
    <test expect_num_outputs="6">
        <param name="study_fasta" value="study_seqs_full.fasta"/>
        <param name="input" value="workflow_seq_abun.biom"/>
        <param name="placement_tool" value="sepp"/>
        <param name="min_align" value="0.0"/>
        <param name="skip_nsti" value="false"/>
        <param name="max_nsti" value="2.0"/>
        <param name="skip_minpath" value="false"/>
        <param name="skip_norm" value="false"/>
        <param name="no_gap_fill" value="true"/>
        <param name="remove_intermediate" value="true"/>
        <conditional name="input_options">
            <param name="selector" value="ASV"/>
            <param name="min_reads" value="1"/>
            <param name="min_samples" value="1"/>
        </conditional>
        <conditional name="trait_input">
            <param name="selector" value="default"/>
            <param name="in_traits" value="KO,PFAM"/>
        </conditional>
        <output name="out_tree" ftype="newick">
            <assert_contents>
                <has_text text="643348582"/>
                <has_n_lines n="1"/>
            </assert_contents>
        </output>
        <output_collection name="full_pipeline_output_files" type="list" count="5">
            <element name="EC_predicted.tsv.gz">
                <assert_contents>
                    <has_text text="EC:1.1.1.1"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
            <element name="KO_predicted.tsv.gz">
                <assert_contents>
                    <has_text text="K00001"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
            <element name="marker_predicted.tsv.gz">
                <assert_contents>
                    <has_text text="16S_rRNA_Count"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
        </output_collection>
        <output_collection name="EC_metagenome_output_files" type="list" count="2">
            <element name="pred_metagenome_unstrat.tsv.gz">
                <assert_contents>
                    <has_text text="function"/>
                    <has_n_lines n="768"/>
                </assert_contents>
            </element>
            <element name="seqtab_norm.tsv.gz">
                <assert_contents>
                    <has_text text="normalized"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
        </output_collection>
        <output_collection name="KO_metagenome_output_files" type="list"  count="2">
            <element name="pred_metagenome_unstrat.tsv.gz">
                <assert_contents>
                    <has_text text="function"/>
                    <has_n_lines n="1710"/>
                </assert_contents>
            </element>
            <element name="seqtab_norm.tsv.gz">
                <assert_contents>
                    <has_text text="normalized"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
        </output_collection>
        <output_collection name="PFAM_metagenome_output_files" type="list" count="2">
            <element name="pred_metagenome_unstrat.tsv.gz">
                <assert_contents>
                    <has_text text="function"/>
                    <has_n_lines n="2739"/>
                </assert_contents>
            </element>
            <element name="seqtab_norm.tsv.gz">
                <assert_contents>
                    <has_text text="normalized"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </element>
        </output_collection>
        <output_collection name="intermediate_output_files" type="list" count="2">
            <element name="query_align.stockholm">
                <assert_contents>
                    <has_text text="STOCKHOLM 1.0"/>
                    <has_n_lines n="160106"/>
                </assert_contents>
            </element>
            <element name="study_seqs_filtered.fasta">
                <assert_contents>
                    <has_text text="02905cfb87861c837dde629596d9272b"/>
                    <has_n_lines n="10"/>
                </assert_contents>
            </element>
        </output_collection>
    </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

PICRUSt2 full pipeline
======================
Run sequence placement with EPA-NG and GAPPA to place study sequences (i.e. OTUs and ASVs) into a reference tree. Then runs hidden-state prediction with the castor R package to predict genome for each study sequence. Metagenome profiles are then generated, which can be optionally stratified by the contributing sequence. Finally, pathway abundances are predicted based on metagenome profiles. By default, output files include predictions for Enzyme Commission (EC) numbers, KEGG Orthologs (KOs), and MetaCyc pathway abundances. However, the tool enables users to use custom reference and trait tables to customize analyses.

Note
====
The standard pipeline will generate metagenome predictions for 16S rRNA gene data.

Input
=====
1. A FASTA of amplicon sequences variants (ASVs; i.e. your representative sequences, not your raw reads)
2. A BIOM table of the abundance of each ASV across each sample.

Output
======
1. Output tree with placed study sequences.
2. Metagenome Predictions
3. Pathway level predictions

    ]]></help>
    <citations>
        <citation type="doi">10.1038/s41587-020-0548-6</citation>
    </citations>
</tool>