<tool id="pharokka" name="bacteriophage annotation" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" python_template_version="3.7" profile="@PROFILE@">
    <description>
        rapid standardised annotation tool for bacteriophage genomes and metagenomes
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools" />
    <expand macro="requirements" />
    <expand macro="version" />
    <command detect_errors="exit_code">
        <![CDATA[
        ## get DB based on data table or history
        #if str( $reference_source.reference_source_selector ) == 'history':
        echo use history &&
        mkdir pharokka_db &&
        unzip '$reference_source.db_histroy' -d pharokka_db &&
        #else:
        echo use cache &&
        mkdir pharokka_db &&
        unzip '$reference_source.db_cached.fields.path' -d pharokka_db &&
        #end if
        
        ## run tool
        #if str( $terminase.terminase_selector ) == 'no_terminase':
        pharokka.py 
        -i '$fasta'
        -o pharokka_output
        -d pharokka_db
        -t \${GALAXY_SLOTS:-8} 
        $gene_predictor
        $meta
        -e '$evalue' &&
        #else:
        pharokka.py 
        -i '$fasta' 
        -o pharokka_output 
        -d pharokka_db 
        -t \${GALAXY_SLOTS:-8} 
        $gene_predictor 
        $meta 
        -e '$evalue' 
        --terminase 
        --terminase_strand '$terminase.terminase_strand' 
        --terminase_start '$terminase.terminase_start' &&
        #end if
        
        ## create output
        #if $zip_output == 'true':
            zip -r out.zip pharokka_output
        #else:
            echo 'no zip output'
        #end if
        ]]>
    </command>
    <inputs>
        <!-- the genome -->
        <param type="data" name="fasta" format="fasta" help="Please upload an genome file of a bacteriophage in fasta format." label="Bacteriophage genome" />
        <!-- the DB -->
        <conditional name="reference_source">
            <param name="reference_source_selector" type="select" label="Load DB from">
                <option value="cached">
                    Local cache
                </option>
                <option value="history">
                    History
                </option>
            </param>
            <when value="cached">
                <param name="db_cached" type="select" label="Using built-in pharokka DB" help="Using built-in pharokka DB">
                    <options from_data_table="pharokka_db">
                    </options>
                    <validator type="no_options" message="A built-in pharokka DB is not available for the build associated with the selected input file" />
                </param>
            </when>
            <when value="history">
                <param name="db_histroy" type="data" format="zip" label="Use the folloing pharokka DB" help="You can upload a pharokka DB as zip to the history and use it as DB. An up-to-date DB can be downloaded as explained in https://github.com/gbouras13/pharokka. Make sure to convert the folder into a Zip archive." />
            </when>
        </conditional>
        <!-- additional arguments -->
        <param name="gene_predictor" type="select" label="User specified gene predictor">
            <option value="-g phanotate">
                Phanotate
            </option>
            <option value="-g prodigal">
                Prodigal
            </option>
        </param>
        <param name="meta" type="boolean" checked="false" truevalue="--meta" falsevalue="" label="meta mode for metavirome input samples" />
        <param name="evalue" type="integer" value="100000" label="E-value threshold for mmseqs2 PHROGs database search. Defaults to 1E-05." />
        <!-- optional arguments -->
        <conditional name="terminase">
            <param name="terminase_selector" type="select" label="Runs - terminase large subunit - re-orientation mode. Single genome input only and requires --terminase_strand and --terminase_start to be specified.">
                <option value="no_terminase">
                    Do not run 'terminase large subunit' re-orientation mode.
                </option>
                <option value="run_terminase">
                    Runs 'terminase large subunit' re-orientation mode.
                </option>
            </param>
            <when value="no_terminase">
            </when>
            <when value="run_terminase">
                <param name="terminase_strand" type="select" label="Strand of terminase large subunit.">
                    <option value="pos">
                        Positive
                    </option>
                    <option value="neg">
                        Negative
                    </option>
                </param>
                <param name="terminase_start" type="integer" value="1" label="Start coordinate of the terminase large subunit." />
            </when>
        </conditional>
        <!-- optional outputs -->
        <param name="zip_output" type="boolean" checked="false" truevalue="true" falsevalue="false" label="Create a Zip archive of the complete output for further investigation." />
    </inputs>
    <outputs>
        <data name="pharokka_gbk" format="genbank" from_work_dir="pharokka_output/pharokka.gbk" label="${tool.name} on ${on_string}: Genbank" />
        <data name="pharokka_gff" format="gff" from_work_dir="pharokka_output/pharokka.gff" label="${tool.name} on ${on_string}: GFF" />
        <data name="archive_output" format="zip" from_work_dir="out.zip" label="${tool.name} on ${on_string}: zip of the complete output" >
            <filter>zip_output</filter>
        </data>

    </outputs>
    <tests>
        <!-- test input from history -->
        <test expect_num_outputs="3">
            <param name="reference_source_selector" value="history" />
            <param name="db_histroy" value="subset_pharokka_db.zip" />
            <param name="fasta" value="SAOMS1.fasta" />
            <param name="zip_output" value="true" />
            <!-- check file size and text since output is non-deterministic -->
            <output name="pharokka_gbk">
                <assert_contents>
                    <has_size value="353875" delta="10" />
                    <has_text text="VERSION     MW460250_1" />
                </assert_contents>
            </output>
            <output name="pharokka_gff">
                <assert_contents>
                    <has_size value="191497" delta="10" />
                    <has_text text="##sequence-region MW460250_1 1 140135" />
                </assert_contents>
            </output>
            <!-- check created zip -->
            <output name="archive_output">
                <assert_contents>
                    <has_archive_member path=".*\/pharokka\.gff" />
                    <has_archive_member path=".*\/pharokka\.gbk" />
                    <has_archive_member path=".*\/pharokka.*\.log" />
                </assert_contents>
            </output>
        </test>
        <!-- test input from history - no zip -->
        <test expect_num_outputs="2">
            <param name="reference_source_selector" value="history" />
            <param name="db_histroy" value="subset_pharokka_db.zip" />
            <param name="fasta" value="SAOMS1.fasta" />
            <param name="zip_output" value="false" />
            <!-- check file size and text since output is non-deterministic -->
            <output name="pharokka_gbk">
                <assert_contents>
                    <has_size value="353875" delta="10" />
                    <has_text text="VERSION     MW460250_1" />
                </assert_contents>
            </output>
            <output name="pharokka_gff">
                <assert_contents>
                    <has_size value="191497" delta="10" />
                    <has_text text="##sequence-region MW460250_1 1 140135" />
                </assert_contents>
            </output>
        </test>
        <!-- test input from DB -->
        <test expect_num_outputs="3">
            <param name="reference_source_selector" value="cached" />
            <param name="db_cached" value="pharokka_db" />
            <param name="fasta" value="SAOMS1.fasta" />
            <param name="zip_output" value="true" />
            <!-- check file size and text since output is non-deterministic -->
            <output name="pharokka_gbk">
                <assert_contents>
                    <has_size value="353875" delta="10" />
                    <has_text text="VERSION     MW460250_1" />
                </assert_contents>
            </output>
            <output name="pharokka_gff">
                <assert_contents>
                    <has_size value="191497" delta="10" />
                    <has_text text="##sequence-region MW460250_1 1 140135" />
                </assert_contents>
            </output>
            <!-- check created zip -->
            <output name="archive_output">
                <assert_contents>
                    <has_archive_member path=".*\/pharokka\.gff" />
                    <has_archive_member path=".*\/pharokka\.gbk" />
                    <has_archive_member path=".*\/pharokka.*\.log" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
        <![CDATA[
        pharokka is a rapid standardised annotation tool for bacteriophage genomes and metagenomes.
        
        If you are looking for rapid standardised annotation of bacterial genomes, please use prokka, which inspired the creation of pharokka, or bakta.
        ]]>
    </help>
    <expand macro="citations" />
</tool>
