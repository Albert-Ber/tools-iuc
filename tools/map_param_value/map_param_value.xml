<tool name="Map parameter value" id="map_param_value" version="0.1.0" tool_type="expression" profile="22.01">
    <expression type="ecma5.1">
        <![CDATA[{
const source = $job.input_text_param;
const mappings = $job.mappings;
for ( var i = 0; i < mappings.length; i++ ) {
    if ( mappings[i].from == source ) {
        return { output: mappings[i].to };
    }
}
if ( $job.fail_unmapped ) {
    return { __error_message: `text_param ${source} not found in mapping values.` };
}
return { output: source };
}]]>
    </expression>
    <inputs>
        <param name="input_text_param" type="text" label="Text parameter to map to a different value" />
        <repeat name="mappings" label="Add value mapping">
            <param name="from" type="text" label="Map from this value"></param>
            <param name="to" type="text" label="to this value"></param>
        </repeat>
        <param name="fail_unmapped" type="boolean" label="Fail if parameter not found in mappings?" />
    </inputs>
    <outputs>
        <output type="text" name="output_text_param" from="output"></output>
    </outputs>
    <help><![CDATA[
Maps a text parameter value to another value. If the value is not found in the mapping the unmodified value is returned by default. Set "Fail if parameter not found in mappings?" to true to fail the job if the input value has not been mapped to another value.
    ]]></help>
    <tests>
        <test expect_num_outputs="1">
            <param name="input_text_param" value="A" />
            <repeat name="mappings">
                <param name="from" value="A" />
                <param name="to" value="B" />
            </repeat>
            <output name="output_text_param" value_json="&quot;B&quot;" />
        </test>
        <test expect_num_outputs="1">
            <param name="input_text_param" value="C" />
            <repeat name="mappings">
                <param name="from" value="A" />
                <param name="to" value="B" />
            </repeat>
            <output name="output_text_param" value_json="&quot;C&quot;" />
        </test>
        <test expect_num_outputs="1" expect_failure="true">
            <param name="input_text_param" value="C" />
            <repeat name="mappings">
                <param name="from" value="A" />
                <param name="to" value="B" />
            </repeat>
            <param name="fail_unmapped" value="true" />
        </test>
    </tests>
</tool>
